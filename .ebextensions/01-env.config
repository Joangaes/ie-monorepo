# AWS Elastic Beanstalk environment configuration
# Set these environment variables in your EB environment
# Use: eb setenv KEY=VALUE or AWS Console -> Configuration -> Software -> Environment properties

# Example environment variables - REPLACE VALUES WITH YOUR ACTUAL CONFIG
# DO NOT commit real secrets to version control

option_settings:
  # Platform settings
  aws:elasticbeanstalk:application:environment:
    # AWS/EB specific
    AWS_DEFAULT_REGION: us-east-1
    EB_ENV_NAME: my-app-prod
    EB_LOG_STREAM_PREFIX: iemanager
    
    # Database (use RDS endpoint and credentials)
    DATABASE_URL: postgresql://username:password@your-rds-endpoint:5432/dbname
    DB_HOST: your-rds-endpoint.region.rds.amazonaws.com
    DB_NAME: iemanager
    DB_USER: dbadmin
    DB_PASSWORD: your-secure-password
    DB_PORT: "5432"
    
    # Django security settings
    SECRET_KEY: your-very-secure-secret-key-here
    DEBUG: "false"
    ALLOWED_HOSTS: your-domain.com,your-eb-env.region.elasticbeanstalk.com
    CSRF_TRUSTED_ORIGINS: https://your-domain.com,https://your-eb-env.region.elasticbeanstalk.com
    CORS_ALLOWED_ORIGINS: https://your-domain.com,https://your-eb-env.region.elasticbeanstalk.com
    
    # Django optional settings
    DJANGO_COLLECTSTATIC: "1"
    DJANGO_SUPERUSER_EMAIL: admin@yourdomain.com
    DJANGO_SUPERUSER_PASSWORD: your-admin-password
    
    # Email configuration (optional)
    EMAIL_HOST_USER: your-email@gmail.com
    EMAIL_HOST_PASSWORD: your-app-password
    
    # Frontend configuration
    NEXT_PUBLIC_API_BASE: https://your-domain.com
    
    # Gunicorn tuning (optional)
    GUNICORN_WORKERS: "3"
    GUNICORN_TIMEOUT: "60"
    GUNICORN_MAX_REQUESTS: "1000"
    GUNICORN_MAX_REQUESTS_JITTER: "100"

  # Configure load balancer health check
  aws:elasticbeanstalk:environment:process:default:
    HealthCheckPath: /healthz
    HealthCheckInterval: 15
    HealthyThresholdCount: 3
    UnhealthyThresholdCount: 5
    
  # Instance settings
  aws:autoscaling:launchconfiguration:
    InstanceType: t3.medium
    IamInstanceProfile: aws-elasticbeanstalk-ec2-role
    
  # Auto scaling
  aws:autoscaling:asg:
    MinSize: 1
    MaxSize: 4
    
  # Load balancer
  aws:elasticbeanstalk:environment:
    EnvironmentType: LoadBalanced
    LoadBalancerType: application
