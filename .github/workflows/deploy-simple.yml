# Simple CI/CD Pipeline - Direct EB Build
# Uses EB's built-in Docker build (no ECR required)

name: Simple Deploy to AWS EB

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Test stage
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install backend dependencies
        run: |
          cd ie_professors_database
          # Update lock file if pyproject.toml has changed
          poetry lock
          poetry install

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ie-professors-frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd ie-professors-frontend
          npm ci

      - name: Build frontend (test)
        run: |
          cd ie-professors-frontend
          npm run build

  # Deploy stage (only on main branch)
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Install EB CLI
        run: |
          pip install awsebcli

      - name: Initialize EB CLI
        run: |
          eb init --region eu-west-1 --platform "Docker running on 64bit Amazon Linux 2023" ie-professor-management
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy to Elastic Beanstalk
        run: |
          eb deploy Ieuniversitydocker-env --timeout 20
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Notify deployment success
        if: success()
        run: |
          echo "ðŸš€ Deployment successful to production environment!"
