name: Deploy to AWS Elastic Beanstalk (Single Container)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: eu-north-1
  EB_APPLICATION_NAME: Ieuniversitydocker
  EB_ENVIRONMENT_NAME: Ieuniversitydocker-env

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Optional: if EB is "Updating", abort it so a new deploy can proceed
      - name: Abort any in-progress EB update (best-effort)
        run: |
          STATUS=$(aws elasticbeanstalk describe-environments \
            --application-name "$EB_APPLICATION_NAME" \
            --environment-names "$EB_ENVIRONMENT_NAME" \
            --query "Environments[0].Status" --output text || echo "Unknown")
          if [ "$STATUS" = "Updating" ]; then
            echo "Environment is Updating; aborting current operation..."
            aws elasticbeanstalk abort-environment-update \
              --environment-name "$EB_ENVIRONMENT_NAME" || true
            # Small wait so EB flips out of Updating state
            sleep 20
          else
            echo "Environment status: $STATUS"
          fi

      # Build the deployment bundle that EB will use to find Dockerfile and build the image
      - name: Create deployment package
        run: |
          set -euo pipefail

          # Sanity: ensure Dockerfile is at repo root
          test -f Dockerfile || (echo "ERROR: Dockerfile not found at repo root." && exit 1)

          # Zip only what's required for the image build/runtime
          # NOTE: zip uses -x (not --exclude) and patterns must be quoted.
          zip -r deploy.zip \
            Dockerfile \
            docker/ \
            ie_professors_database/ \
            ie-professors-frontend/ \
            .ebextensions/ \
            .platform/ \
            -x "**/__pycache__/**" \
               "**/node_modules/**" \
               "**/.pytest_cache/**" \
               "**/*.log" \
               "**/.git/**" \
               ".github/**" \
               "infra/**" \
               "docs/**" \
               "cloud.logs" \
               "*.xlsx" \
               "*.bak" \
               "**/*.local.*"

          # Verify EB will see Dockerfile in the root of the zip
          unzip -l deploy.zip | grep -q "^ *[0-9].* Dockerfile$" || (echo "ERROR: Dockerfile missing from zip root." && exit 1)

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          region: ${{ env.AWS_REGION }}
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip

      - name: Set EB Environment Variables
        run: |
          aws elasticbeanstalk update-environment \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
            --option-settings \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DJANGO_ALLOWED_HOSTS,Value="${{ secrets.DJANGO_ALLOWED_HOSTS }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DJANGO_SECRET_KEY,Value="${{ secrets.DJANGO_SECRET_KEY }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_NAME,Value="${{ secrets.DB_NAME }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_USER,Value="${{ secrets.DB_USER }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_PASSWORD,Value="${{ secrets.DB_PASSWORD }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_HOST,Value="${{ secrets.DB_HOST }}" \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_PORT,Value="${{ secrets.DB_PORT }}"

      - name: Configure EB Health Check
        run: |
          aws elasticbeanstalk update-environment \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
            --option-settings \
              Namespace=aws:elasticbeanstalk:healthreporting:system,OptionName=SystemType,Value=enhanced \
              Namespace=aws:elasticbeanstalk:application:environment,OptionName=HEALTHCHECK_URL,Value=/health
